<Window x:Class="AutoGarrisonMissions.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:autoGarrisonMissions="clr-namespace:AutoGarrisonMissions"
        mc:Ignorable="d"
        Title="{Binding Title}"
        Icon="{Binding Icon.Source}"
        MinHeight="500" MinWidth="800"
        Height="400" Width="600"
        d:DataContext="{d:DesignInstance autoGarrisonMissions:MainWindowViewModel}">
    <Window.Resources>
        <Color x:Key="HighlightBorderColor">#e5c365</Color>
        <Color x:Key="HighlightBackgroundColor1">#ffe8a6</Color>
        <Color x:Key="HighlightBackgroundColor2">#fff0d0</Color>

        <SolidColorBrush x:Key="HighlightBorderBrush" Color="{StaticResource HighlightBorderColor}" />
        <SolidColorBrush x:Key="HighlightBackgroundBrush1" Color="{StaticResource HighlightBackgroundColor1}" />
        <SolidColorBrush x:Key="HighlightBackgroundBrush2" Color="{StaticResource HighlightBackgroundColor2}" />

        <Style TargetType="DataGrid">
            <Setter Property="SelectionMode" Value="Single" />
            <Setter Property="AutoGenerateColumns" Value="False" />
            <Setter Property="CanUserAddRows" Value="False" />
            <Setter Property="CanUserDeleteRows" Value="False" />
            <Setter Property="CanUserReorderColumns" Value="False" />
            <Setter Property="CanUserResizeRows" Value="False" />
            <Setter Property="CanUserSortColumns" Value="False" />
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{StaticResource HighlightBorderBrush}" />
                    <Setter Property="Background" Value="{StaticResource HighlightBackgroundBrush2}" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.5" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True" />
                        <Condition Property="IsPressed" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="BorderBrush" Value="{StaticResource HighlightBorderBrush}" />
                        <Setter Property="Background" Value="{StaticResource HighlightBackgroundBrush1}" />
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Margin="8">
        <Grid.RowDefinitions>
            <RowDefinition Height="3*" />
            <RowDefinition Height="2*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>

        <DockPanel Grid.Column="0" Grid.Row="1" Margin="0,-4,8,0">
            <TextBlock DockPanel.Dock="Top" Text="Buttons to press for switching between alts:" />
            <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,4,0,0">
                <Button Width="16" Height="16" Margin="0,0,4,0" Command="{Binding AddRerollActionCommand}">
                    <Image Source="{Binding Add.Source}" />
                </Button>
                <Button Width="16" Height="16" Margin="0,0,4,0" Command="{Binding RemoveRerollActionCommand}">
                    <Image Source="{Binding Minus.Source}" />
                </Button>
                <Button Width="16" Height="16" Margin="0,0,4,0" Command="{Binding UpRerollActionCommand}">
                    <Image Source="{Binding Up.Source}" />
                </Button>
                <Button Width="16" Height="16" Command="{Binding DownRerollActionCommand}">
                    <Image Source="{Binding Down.Source}" />
                </Button>
            </StackPanel>
            <DataGrid ItemsSource="{Binding RerollActions}"
                      SelectedItem="{Binding SelectedRerollAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*" />
                    <DataGridTextColumn Header="Button X min" Binding="{Binding XMin}" />
                    <DataGridTextColumn Header="Button X max" Binding="{Binding XMax}" />
                    <DataGridTextColumn Header="Button Y min" Binding="{Binding YMin}" />
                    <DataGridTextColumn Header="Button Y max" Binding="{Binding YMax}" />
                    <DataGridTextColumn Header="Interval" Binding="{Binding IntervalString}" />
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>

        <DockPanel Grid.Column="0" Grid.Row="0" Margin="0,0,8,-4">
            <TextBlock DockPanel.Dock="Top" Text="Buttons to press for missions:" />
            <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,4,0,0">
                <Button Width="16" Height="16" Margin="0,0,4,0" Command="{Binding AddMissionActionCommand}">
                    <Image Source="{Binding Add.Source}" />
                </Button>
                <Button Width="16" Height="16" Margin="0,0,4,0" Command="{Binding RemoveMissionActionCommand}">
                    <Image Source="{Binding Minus.Source}" />
                </Button>
                <Button Width="16" Height="16" Margin="0,0,4,0" Command="{Binding UpMissionActionCommand}">
                    <Image Source="{Binding Up.Source}" />
                </Button>
                <Button Width="16" Height="16" Command="{Binding DownMissionActionCommand}">
                    <Image Source="{Binding Down.Source}" />
                </Button>
            </StackPanel>
            <DataGrid ItemsSource="{Binding MissionActions}"
                      SelectedItem="{Binding SelectedMissionAction, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*" />
                    <DataGridTextColumn Header="Button X min" Binding="{Binding XMin}" />
                    <DataGridTextColumn Header="Button X max" Binding="{Binding XMax}" />
                    <DataGridTextColumn Header="Button Y min" Binding="{Binding YMin}" />
                    <DataGridTextColumn Header="Button Y max" Binding="{Binding YMax}" />
                    <DataGridTextColumn Header="Interval" Binding="{Binding IntervalString}" />
                </DataGrid.Columns>
            </DataGrid>
        </DockPanel>

        <DockPanel Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" LastChildFill="False"
                   Margin="8,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <DockPanel.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="MinWidth" Value="50" />
                </Style>
            </DockPanel.Resources>

            <Grid DockPanel.Dock="Top" Margin="0,0,0,4">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <Button Content="New" Grid.Row="0" Grid.Column="0" Command="{Binding NewFileCommand}" Margin="0,0,2,2" />
                <Button Content="Load" Grid.Row="0" Grid.Column="1" Command="{Binding OpenFileCommand}" Margin="2,0,0,2" />
                <Button Content="Save" Grid.Row="1" Grid.Column="0" Command="{Binding SaveFileCommand}" Margin="0,2,2,0" />
                <Button Content="Close" Grid.Row="1" Grid.Column="1" Command="{Binding CloseFileCommand}" Margin="2,2,0,0" />
            </Grid>

            <Grid DockPanel.Dock="Top" Margin="0,4,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="Name:" Margin="0,0,8,0" />
                <TextBox  Grid.Row="0" Grid.Column="1" Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding CanEditWagFileName}" MinWidth="80" />

                <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="Jump interval:" Margin="0,0,8,0" />
                <TextBox Grid.Row="1" Grid.Column="1" Margin="0,4,0,0" Text="{Binding JumpInterval}" IsEnabled="{Binding CanEditWagFileName}" MinWidth="80" />

                <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" Text="Alts interval:" Margin="0,0,8,0" />
                <TextBox Grid.Row="2" Grid.Column="1" Margin="0,4,0,0" Text="{Binding AltsInterval}" IsEnabled="{Binding CanEditWagFileName}" MinWidth="80" />
            </Grid>
            
            <Grid DockPanel.Dock="Bottom" Margin="0,8,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*" />
                    <ColumnDefinition Width="1*" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column="0" Content="Get mouse pos." ToolTip="Ctrl + L" Command="{Binding GetMousePositionCommand}" Margin="0,0,2,0" />
                <Button Grid.Column="1" Content="{Binding StartStopText}" ToolTip="Ctrl + P" Command="{Binding StartAutoClickCommand}" Margin="2,0,0,0" />
            </Grid>
            
            <Grid DockPanel.Dock="Bottom">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                
                <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" Text="First mouse pos.:" Margin="0,0,8,0" />
                <TextBox  Grid.Row="0" Grid.Column="1" Text="{Binding MousePosition1, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" MinWidth="80" />

                <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" Text="Second mouse pos.:" Margin="0,0,8,0" />
                <TextBox Grid.Row="1" Grid.Column="1" Margin="0,4,0,0" Text="{Binding MousePosition2, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" MinWidth="80" />
            </Grid>
        </DockPanel>
    </Grid>

</Window>
